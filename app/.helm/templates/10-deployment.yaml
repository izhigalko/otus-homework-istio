apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include ".helm.fullname" . }}-deployment-v1
  labels:
    {{- include ".helm.labels" . | nindent 4 }}
    version: v1
spec:
  replicas: {{ .Values.deployment.version1.replicaCount }}
  selector:
    matchLabels:
      {{- include ".helm.selectorLabels" . | nindent 6 }}
      version: v1
  template:
    metadata:
      labels:
        {{- include ".helm.selectorLabels" . | nindent 8 }}
        version: v1
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.deployment.version1.image.repository }}:{{ .Values.deployment.version1.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.version1.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.version1.container.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include ".helm.fullname" . }}-deployment-v2
  labels:
    {{- include ".helm.labels" . | nindent 4 }}
    version: v2
spec:
  replicas: {{ .Values.deployment.version2.replicaCount }}
  selector:
    matchLabels:
      {{- include ".helm.selectorLabels" . | nindent 6 }}
      version: v2
  template:
    metadata:
      labels:
        {{- include ".helm.selectorLabels" . | nindent 8 }}
        version: v2
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.deployment.version2.image.repository }}:{{ .Values.deployment.version2.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.version2.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.version2.container.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http